---

import X from '../assets/theme-images/icon-x.svg'

const { content } = Astro.props

---

<dialog id="demo" closedby="any" class="fixed inset-0 bg-bs-surface-0 m-auto z-50 p-6 md:p-12 rounded-xl w-full max-w-[95%] md:max-w-lg">

  <!-- Form -->
  <form id="dialog-form" method="dialog" class="flex gap-6 flex-col">

    <!-- Header -->
    <h2 class="text-2xl flex justify-between items-center gap-4">

      <span>{ content.title }</span>

      <button type="button" onclick="this.closest('dialog').close('close')" aria-label="Close"
        class="bs-btn rounded-full !p-0 flex items-center justify-center h-10 w-10">

        <X class="scale-75 opacity-75" width="32" height="32" />

      </button>

    </h2>

    <!-- Content -->

    <div class="flex flex-col gap-4">

      <!-- Intro -->
      <div class="bs-body-text mb-3" set:html={ content.content } />

        <!-- Form inputs -->

        <!-- Name -->
        <label class="sr-only" for="name">Tu nombre</label>

        <input
          id="name"
          name="name"
          type="text"
          class="border-2 rounded-lg bg-bs-surface-0 border-bs-surface-3 form-input px-4 py-3"
          placeholder="Jhon Doe"
        >

        <!-- Phone number -->
        <label class="sr-only" for="phone_number">Tu número de celular</label>

        <input
          id="phone_number"
          name="phone"
          type="text"
          class="border-2 rounded-lg bg-bs-surface-0 border-bs-surface-3 form-input px-4 py-3"
          placeholder="69405752"
        >

        <!-- Text message -->
        <label class="sr-only" for="text_message">Mensaje</label>

        <textarea
          id="text_message"
          name="message"
          class="border-2 rounded-lg bg-bs-surface-0 border-bs-surface-3 form-input px-4 py-3"
          placeholder="Hola, quisiera obtener más información sobre..."
          rows="3"
        ></textarea>

        <!-- Submit -->
        <button id="dialog-submit" type="submit" class="bs-btn form-input px-4 py-3">{ content.cta }</button>

    </div>

  </form>

  <!-- Toast Notification -->
  <div id="dialog-toast-notification" class="fixed bottom-5 right-5 z-50 px-4 py-3 rounded-lg text-white bg-green-500 transition-all duration-300 opacity-0 translate-y-4 pointer-events-none">
    <span id="dialog-toast-message"></span>
  </div>

</dialog>

<script>
  const dialog = document.getElementById('demo') as HTMLDialogElement;
  const form = document.getElementById('dialog-form') as HTMLFormElement;
  const submitButton = document.getElementById('dialog-submit') as HTMLButtonElement;
  const toast = document.getElementById('dialog-toast-notification') as HTMLDivElement;
  const toastMessage = document.getElementById('dialog-toast-message') as HTMLSpanElement;
  let toastTimeout: number;

  form.addEventListener('submit', async (event) => {
    event.preventDefault();

    const originalButtonText = submitButton.textContent;
    submitButton.textContent = 'Enviando...';
    submitButton.disabled = true;

    const formData = new FormData(form);
    const name = (formData.get('name') as string)?.trim();
    const phone = (formData.get('phone') as string)?.trim();
    const message = (formData.get('message') as string)?.trim();

    // Validations
    if (name.length <= 2) {
      showToast('Tu nombre debe tener más de 2 caracteres.', true);
      submitButton.textContent = originalButtonText;
      submitButton.disabled = false;
      return;
    }
    if (!/^\d{8}$/.test(phone)) {
      showToast('Tu número de celular debe tener 8 dígitos.', true);
      submitButton.textContent = originalButtonText;
      submitButton.disabled = false;
      return;
    }
    if (message.length <= 2) {
      showToast('Tu mensaje debe tener más de 2 caracteres.', true);
      submitButton.textContent = originalButtonText;
      submitButton.disabled = false;
      return;
    }
    const text = `Consulta de ${name} (${phone}):\n\n${message}`;

    try {
      const response = await fetch('https://whatsapp-api.desarrollocreativo.dev/send?id=desarrollo-creativo', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          phone: '59175199157', // Your business number
          text: text,
        }),
      });

      if (response.ok) {
        showToast('¡Mensaje enviado! Gracias por contactarnos.');
        form.reset();
        setTimeout(() => dialog.close(), 500); // Close dialog after a short delay
      } else {
        showToast('Hubo un error al enviar tu mensaje. Por favor, inténtalo de nuevo.', true);
      }
    } catch (error) {
      showToast('Hubo un error de red. Por favor, revisa tu conexión e inténtalo de nuevo.', true);
    } finally {
      submitButton.textContent = originalButtonText;
      submitButton.disabled = false;
    }
  });

  // --- Toast Notification Logic ---
  function showToast(message: string, isError = false) {
    clearTimeout(toastTimeout);

    toastMessage.textContent = message;

    // Set color based on success or error
    toast.classList.toggle('bg-red-500', isError);
    toast.classList.toggle('bg-green-500', !isError);

    // Show toast
    toast.classList.remove('opacity-0', 'translate-y-4');
    toast.classList.add('opacity-100', 'translate-y-0');

    // Hide toast after 3 seconds
    toastTimeout = window.setTimeout(() => {
      toast.classList.remove('opacity-100', 'translate-y-0');
      toast.classList.add('opacity-0', 'translate-y-4');
    }, 3000);
  }
</script>

<style>

html:has(dialog[open]) {
  overflow: hidden;
  backdrop-filter: blur(0);
  scrollbar-gutter: stable;
}

dialog[open]::backdrop {
  backdrop-filter: blur(50px);
}

@keyframes scale-up {

  to {
    translate: 0 0;
    scale: 1;
  }

}

@media (prefers-reduced-motion: no-preference) {

  dialog {
    translate: 0 2rem;
    scale: .8
  }

  dialog[open] {
    animation: scale-up forwards 1s;
    animation-timing-function: var(--ease-bs-spring);
  }

}


</style>